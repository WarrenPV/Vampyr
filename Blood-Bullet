//This is the Bullet Script slightly modified from https://www.youtube.com/watch?v=4XrazhLqLSQ
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BloodBullet : MonoBehaviour
{
    public GameObject projectile;
    public Vector2 velocity;

    public bool canShoot = true;
    public Vector2 Offset = new Vector2(0.4f, 0.1f);

    public float cooldown = 1f;

    public Animator Player;

    float animationwait = .24f;

    public AudioSource BS;

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
    // I don't want the player to be able to fire in the pause menu or they could build up a wall of bullets and just mow down everything.
        if (!PauseMenu.isPaused)
        {
        // Only want the player to be able to shoot if they have one blood collected
            if (PlayerMovement.BloodCounter >= 1)
            {
            //Only want the player to be able to shoot when the cooldown is over
                if (Input.GetKeyDown(KeyCode.K) && canShoot == true)
                {
                    Player.SetBool("IsShooting", true);
                    
                    //Plays the sound effect for the blood
                    BS.Play();
                    
                    //This creates our blood bullet object.
                    GameObject go = (GameObject)Instantiate(projectile, (Vector2)transform.position + Offset * transform.localScale.x, Quaternion.identity);
                    go.GetComponent<Rigidbody2D>().velocity = new Vector2(velocity.x * transform.localScale.x, velocity.y);
                    
                    StartCoroutine("Cooldown");
                    PlayerMovement.BloodCounter = PlayerMovement.BloodCounter - 1;
                    

                }
            }
            
        }
    }

    IEnumerator Cooldown()
    {
        canShoot = false;
        yield return new WaitForSeconds(animationwait);
        Player.SetBool("IsShooting", false);
        yield return new WaitForSeconds(cooldown-animationwait);
        
        canShoot = true;
    }
}
